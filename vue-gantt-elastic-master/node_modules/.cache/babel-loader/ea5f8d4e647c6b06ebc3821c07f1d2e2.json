{"remainingRequest":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/babel-loader/lib/index.js!/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/quasar/src/utils/touch-observer.js","dependencies":[{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/quasar/src/utils/touch-observer.js","mtime":1664650529299},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/cache-loader/dist/cjs.js","mtime":1664650533042},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/babel-loader/lib/index.js","mtime":1664650533420}],"contextDependencies":[],"result":["export function setObserver(el, evt, ctx) {\n  var target = evt.target;\n  ctx.touchTargetObserver = new MutationObserver(function () {\n    el.contains(target) === false && ctx.end(evt);\n  });\n  ctx.touchTargetObserver.observe(el, {\n    childList: true,\n    subtree: true\n  });\n}\nexport function removeObserver(ctx) {\n  if (ctx.touchTargetObserver !== void 0) {\n    ctx.touchTargetObserver.disconnect();\n    ctx.touchTargetObserver = void 0;\n  }\n}",{"version":3,"sources":["/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/quasar/src/utils/touch-observer.js"],"names":["setObserver","el","evt","ctx","target","touchTargetObserver","MutationObserver","contains","end","observe","childList","subtree","removeObserver","disconnect"],"mappings":"AAAA,OAAO,SAASA,WAAT,CAAsBC,EAAtB,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoC;AACzC,MAAMC,MAAM,GAAGF,GAAG,CAACE,MAAnB;AACAD,EAAAA,GAAG,CAACE,mBAAJ,GAA0B,IAAIC,gBAAJ,CAAqB,YAAM;AACnDL,IAAAA,EAAE,CAACM,QAAH,CAAYH,MAAZ,MAAwB,KAAxB,IAAiCD,GAAG,CAACK,GAAJ,CAAQN,GAAR,CAAjC;AACD,GAFyB,CAA1B;AAGAC,EAAAA,GAAG,CAACE,mBAAJ,CAAwBI,OAAxB,CAAgCR,EAAhC,EAAoC;AAAES,IAAAA,SAAS,EAAE,IAAb;AAAmBC,IAAAA,OAAO,EAAE;AAA5B,GAApC;AACD;AAED,OAAO,SAASC,cAAT,CAAyBT,GAAzB,EAA8B;AACnC,MAAIA,GAAG,CAACE,mBAAJ,KAA4B,KAAK,CAArC,EAAwC;AACtCF,IAAAA,GAAG,CAACE,mBAAJ,CAAwBQ,UAAxB;AACAV,IAAAA,GAAG,CAACE,mBAAJ,GAA0B,KAAK,CAA/B;AACD;AACF","sourcesContent":["export function setObserver (el, evt, ctx) {\n  const target = evt.target\n  ctx.touchTargetObserver = new MutationObserver(() => {\n    el.contains(target) === false && ctx.end(evt)\n  })\n  ctx.touchTargetObserver.observe(el, { childList: true, subtree: true })\n}\n\nexport function removeObserver (ctx) {\n  if (ctx.touchTargetObserver !== void 0) {\n    ctx.touchTargetObserver.disconnect()\n    ctx.touchTargetObserver = void 0\n  }\n}\n"]}]}
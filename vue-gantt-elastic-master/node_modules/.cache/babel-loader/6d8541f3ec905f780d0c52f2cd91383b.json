{"remainingRequest":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/babel-loader/lib/index.js!/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/gantt-elastic/src/components/Expander.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/gantt-elastic/src/components/Expander.vue","mtime":1664650536313},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/cache-loader/dist/cjs.js","mtime":1664650533042},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/babel-loader/lib/index.js","mtime":1664650533420},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/cache-loader/dist/cjs.js","mtime":1664650533042},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/vue-loader/lib/index.js","mtime":1664650526464}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'Expander',\n  inject: ['root'],\n  props: ['tasks', 'options', 'type'],\n  data: function data() {\n    var border = 0.5;\n    return {\n      border: border,\n      borderStyle: {\n        'stroke-width': border\n      },\n      lineOffset: 5\n    };\n  },\n  computed: {\n    style: function style() {\n      if (this.type !== 'taskList') {\n        return {};\n      }\n\n      var margin = this.root.state.options.taskList.expander.margin;\n      var padding = this.tasks[0].parents.length * this.root.state.options.taskList.expander.padding;\n      return {\n        'padding-left': padding + margin + 'px',\n        margin: 'auto 0'\n      };\n    },\n\n    /**\n     * Get all tasks\n     *\n     * @returns {array}\n     */\n    allChildren: function allChildren() {\n      var children = [];\n      this.tasks.forEach(function (task) {\n        task.allChildren.forEach(function (childId) {\n          children.push(childId);\n        });\n      });\n      return children;\n    },\n\n    /**\n     * Is current expander collapsed?\n     *\n     * @returns {boolean}\n     */\n    collapsed: function collapsed() {\n      if (this.tasks.length === 0) {\n        return false;\n      }\n\n      var collapsed = 0;\n\n      for (var i = 0, len = this.tasks.length; i < len; i++) {\n        if (this.tasks[i].collapsed) {\n          collapsed++;\n        }\n      }\n\n      return collapsed === this.tasks.length;\n    }\n  },\n  methods: {\n    /**\n     * Get specific class prefix\n     *\n     * @returns {string}\n     */\n    getClassPrefix: function getClassPrefix() {\n      var full = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      return \"\".concat(full ? 'gantt-elastic__' : '').concat(this.options.type, \"-expander\");\n    },\n\n    /**\n     * Toggle expander\n     */\n    toggle: function toggle() {\n      if (this.tasks.length === 0) {\n        return;\n      }\n\n      var collapsed = !this.collapsed;\n      this.tasks.forEach(function (task) {\n        task.collapsed = collapsed;\n      });\n    }\n  }\n};",{"version":3,"sources":["Expander.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,MAAA,EAAA,CAAA,MAAA,CAFA;AAGA,EAAA,KAAA,EAAA,CAAA,OAAA,EAAA,SAAA,EAAA,MAAA,CAHA;AAIA,EAAA,IAJA,kBAIA;AACA,QAAA,MAAA,GAAA,GAAA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,MADA;AAEA,MAAA,WAAA,EAAA;AACA,wBAAA;AADA,OAFA;AAKA,MAAA,UAAA,EAAA;AALA,KAAA;AAOA,GAbA;AAcA,EAAA,QAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,UAAA,KAAA,IAAA,KAAA,UAAA,EAAA;AACA,eAAA,EAAA;AACA;;AACA,UAAA,MAAA,GAAA,KAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,QAAA,CAAA,QAAA,CAAA,MAAA;AACA,UAAA,OAAA,GAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAAA,CAAA,MAAA,GAAA,KAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,QAAA,CAAA,QAAA,CAAA,OAAA;AACA,aAAA;AACA,wBAAA,OAAA,GAAA,MAAA,GAAA,IADA;AAEA,QAAA,MAAA,EAAA;AAFA,OAAA;AAIA,KAXA;;AAYA;;;;;AAKA,IAAA,WAjBA,yBAiBA;AACA,UAAA,QAAA,GAAA,EAAA;AACA,WAAA,KAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,QAAA,IAAA,CAAA,WAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,UAAA,QAAA,CAAA,IAAA,CAAA,OAAA;AACA,SAFA;AAGA,OAJA;AAKA,aAAA,QAAA;AACA,KAzBA;;AA0BA;;;;;AAKA,IAAA,SA/BA,uBA+BA;AACA,UAAA,KAAA,KAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,eAAA,KAAA;AACA;;AACA,UAAA,SAAA,GAAA,CAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,GAAA,GAAA,KAAA,KAAA,CAAA,MAAA,EAAA,CAAA,GAAA,GAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,KAAA,KAAA,CAAA,CAAA,EAAA,SAAA,EAAA;AACA,UAAA,SAAA;AACA;AACA;;AACA,aAAA,SAAA,KAAA,KAAA,KAAA,CAAA,MAAA;AACA;AA1CA,GAdA;AA0DA,EAAA,OAAA,EAAA;AACA;;;;;AAKA,IAAA,cANA,4BAMA;AAAA,UAAA,IAAA,uEAAA,IAAA;AACA,uBAAA,IAAA,GAAA,iBAAA,GAAA,EAAA,SAAA,KAAA,OAAA,CAAA,IAAA;AACA,KARA;;AASA;;;AAGA,IAAA,MAZA,oBAYA;AACA,UAAA,KAAA,KAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA;AACA;;AACA,UAAA,SAAA,GAAA,CAAA,KAAA,SAAA;AACA,WAAA,KAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,QAAA,IAAA,CAAA,SAAA,GAAA,SAAA;AACA,OAFA;AAGA;AApBA;AA1DA,CAAA","sourcesContent":["<!--\n/**\n * @fileoverview Expander component\n * @license MIT\n * @author Rafal Pospiech <neuronet.io@gmail.com>\n * @package GanttElastic\n */\n-->\n<template>\n  <div :class=\"getClassPrefix() + '-wrapper'\" :style=\"{ ...root.style[getClassPrefix(false) + '-wrapper'], ...style }\">\n    <svg\n      :class=\"getClassPrefix() + '-content'\"\n      :style=\"{ ...root.style[getClassPrefix(false) + '-content'] }\"\n      :width=\"options.size\"\n      :height=\"options.size\"\n      v-if=\"allChildren.length\"\n      @click=\"toggle\"\n    >\n      <rect\n        :class=\"getClassPrefix() + '-border'\"\n        :style=\"{ ...root.style[getClassPrefix(false) + '-border'], ...borderStyle }\"\n        :x=\"border\"\n        :y=\"border\"\n        :width=\"options.size - border * 2\"\n        :height=\"options.size - border * 2\"\n        rx=\"2\"\n        ry=\"2\"\n      ></rect>\n      <line\n        :class=\"getClassPrefix() + '-line'\"\n        :style=\"{ ...root.style[getClassPrefix(false) + '-line'] }\"\n        v-if=\"allChildren.length\"\n        :x1=\"lineOffset\"\n        :y1=\"options.size / 2\"\n        :x2=\"options.size - lineOffset\"\n        :y2=\"options.size / 2\"\n      ></line>\n      <line\n        :class=\"getClassPrefix() + '-line'\"\n        :style=\"{ ...root.style[getClassPrefix(false) + '-line'] }\"\n        v-if=\"collapsed\"\n        :x1=\"options.size / 2\"\n        :y1=\"lineOffset\"\n        :x2=\"options.size / 2\"\n        :y2=\"options.size - lineOffset\"\n      ></line>\n    </svg>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Expander',\n  inject: ['root'],\n  props: ['tasks', 'options', 'type'],\n  data() {\n    const border = 0.5;\n    return {\n      border,\n      borderStyle: {\n        'stroke-width': border\n      },\n      lineOffset: 5\n    };\n  },\n  computed: {\n    style() {\n      if (this.type !== 'taskList') {\n        return {};\n      }\n      const margin = this.root.state.options.taskList.expander.margin;\n      const padding = this.tasks[0].parents.length * this.root.state.options.taskList.expander.padding;\n      return {\n        'padding-left': padding + margin + 'px',\n        margin: 'auto 0'\n      };\n    },\n    /**\n     * Get all tasks\n     *\n     * @returns {array}\n     */\n    allChildren() {\n      const children = [];\n      this.tasks.forEach(task => {\n        task.allChildren.forEach(childId => {\n          children.push(childId);\n        });\n      });\n      return children;\n    },\n    /**\n     * Is current expander collapsed?\n     *\n     * @returns {boolean}\n     */\n    collapsed() {\n      if (this.tasks.length === 0) {\n        return false;\n      }\n      let collapsed = 0;\n      for (let i = 0, len = this.tasks.length; i < len; i++) {\n        if (this.tasks[i].collapsed) {\n          collapsed++;\n        }\n      }\n      return collapsed === this.tasks.length;\n    }\n  },\n  methods: {\n    /**\n     * Get specific class prefix\n     *\n     * @returns {string}\n     */\n    getClassPrefix(full = true) {\n      return `${full ? 'gantt-elastic__' : ''}${this.options.type}-expander`;\n    },\n    /**\n     * Toggle expander\n     */\n    toggle() {\n      if (this.tasks.length === 0) {\n        return;\n      }\n      const collapsed = !this.collapsed;\n      this.tasks.forEach(task => {\n        task.collapsed = collapsed;\n      });\n    }\n  }\n};\n</script>\n"],"sourceRoot":"node_modules/gantt-elastic/src/components"}]}
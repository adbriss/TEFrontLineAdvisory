{"remainingRequest":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/babel-loader/lib/index.js!/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/gantt-elastic/src/components/TaskList/TaskListHeader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/gantt-elastic/src/components/TaskList/TaskListHeader.vue","mtime":1664650536314},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/cache-loader/dist/cjs.js","mtime":1664650533042},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/babel-loader/lib/index.js","mtime":1664650533420},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/cache-loader/dist/cjs.js","mtime":1664650533042},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/vue-loader/lib/index.js","mtime":1664650526464}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TaskListExpander from \"../Expander.vue\";\nexport default {\n  name: 'TaskListHeader',\n  components: {\n    TaskListExpander: TaskListExpander\n  },\n  inject: ['root'],\n  data: function data() {\n    return {\n      resizer: {\n        moving: false,\n        x: 0\n      }\n    };\n  },\n  computed: {\n    /**\n     * Is this row collapsible?\n     *\n     * @returns {bool}\n     */\n    collapsible: function collapsible() {\n      return this.root.state.tasks.filter(function (task) {\n        return task.allChildren.length > 0;\n      });\n    }\n  },\n  methods: {\n    /**\n     * Get style\n     *\n     * @returns {object}\n     */\n    getStyle: function getStyle(column) {\n      return {\n        width: column.finalWidth + 'px'\n      };\n    },\n\n    /**\n     * Resizer mouse down event handler\n     */\n    resizerMouseDown: function resizerMouseDown(event, column) {\n      if (!this.resizer.moving) {\n        this.resizer.moving = column;\n        this.resizer.x = event.clientX;\n        this.resizer.initialWidth = column.width;\n        this.root.$emit('taskList-column-width-change-start', this.resizer.moving);\n      }\n    },\n\n    /**\n     * Resizer mouse move event handler\n     */\n    resizerMouseMove: function resizerMouseMove(event) {\n      if (this.resizer.moving) {\n        var lastWidth = this.resizer.moving.width;\n        this.resizer.moving.width = this.resizer.initialWidth + event.clientX - this.resizer.x;\n\n        if (this.resizer.moving.width < this.root.state.options.taskList.minWidth) {\n          this.resizer.moving.width = this.root.state.options.taskList.minWidth;\n        }\n\n        if (lastWidth !== this.resizer.moving.width) {\n          this.root.$emit('taskList-column-width-change', this.resizer.moving);\n        }\n      }\n    },\n\n    /**\n     * Resizer mouse up event handler\n     */\n    resizerMouseUp: function resizerMouseUp(event) {\n      if (this.resizer.moving) {\n        this.root.$emit('taskList-column-width-change-stop', this.resizer.moving);\n        this.resizer.moving = false;\n      }\n    }\n  },\n\n  /**\n   * Created\n   */\n  created: function created() {\n    this.mouseUpListener = document.addEventListener('mouseup', this.resizerMouseUp.bind(this));\n    this.mouseMoveListener = document.addEventListener('mousemove', this.resizerMouseMove.bind(this));\n    this.root.$on('main-view-mousemove', this.resizerMouseMove);\n    this.root.$on('main-view-mouseup', this.resizerMouseUp);\n  },\n\n  /**\n   * Before destroy event - clear all event listeners\n   */\n  beforeDestroy: function beforeDestroy() {\n    document.removeEventListener('mouseup', this.resizerMouseUp);\n    document.removeEventListener('mousemove', this.resizerMouseMove);\n  }\n};",{"version":3,"sources":["TaskListHeader.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\n/**\n * @fileoverview TaskListHeader component\n * @license MIT\n * @author Rafal Pospiech <neuronet.io@gmail.com>\n * @package GanttElastic\n */\n-->\n<template>\n  <div\n    class=\"gantt-elastic__task-list-header\"\n    :style=\"{\n      ...root.style['task-list-header'],\n      height: `${root.state.options.calendar.height}px`,\n      'margin-bottom': `${root.state.options.calendar.gap}px`\n    }\"\n  >\n    <div\n      class=\"gantt-elastic__task-list-header-column\"\n      :style=\"{\n        ...root.style['task-list-header-column'],\n        ...column.style['task-list-header-column'],\n        ...getStyle(column)\n      }\"\n      v-for=\"column in root.getTaskListColumns\"\n      :key=\"column._id\"\n    >\n      <task-list-expander\n        v-if=\"column.expander\"\n        :tasks=\"collapsible\"\n        :options=\"root.state.options.taskList.expander\"\n      ></task-list-expander>\n      <div\n        class=\"gantt-elastic__task-list-header-label\"\n        :style=\"{ ...root.style['task-list-header-label'], ...column.style['task-list-header-label'] }\"\n        :column=\"column\"\n        @mouseup=\"resizerMouseUp\"\n      >\n        {{ column.label }}\n      </div>\n      <div\n        class=\"gantt-elastic__task-list-header-resizer-wrapper\"\n        :style=\"{\n          ...root.style['task-list-header-resizer-wrapper'],\n          ...column.style['task-list-header-resizer-wrapper']\n        }\"\n        :column=\"column\"\n        @mousedown=\"resizerMouseDown($event, column)\"\n      >\n        <div\n          class=\"gantt-elastic__task-list-header-resizer\"\n          :style=\"{ ...root.style['task-list-header-resizer'], ...column.style['task-list-header-resizer'] }\"\n        >\n          <div\n            class=\"gantt-elastic__task-list-header-resizer-dot\"\n            :style=\"{ ...root.style['task-list-header-resizer-dot'], ...column.style['task-list-header-resizer-dot'] }\"\n          ></div>\n          <div\n            class=\"gantt-elastic__task-list-header-resizer-dot\"\n            :style=\"{ ...root.style['task-list-header-resizer-dot'], ...column.style['task-list-header-resizer-dot'] }\"\n          ></div>\n          <div\n            class=\"gantt-elastic__task-list-header-resizer-dot\"\n            :style=\"{ ...root.style['task-list-header-resizer-dot'], ...column.style['task-list-header-resizer-dot'] }\"\n          ></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TaskListExpander from '../Expander.vue';\nexport default {\n  name: 'TaskListHeader',\n  components: {\n    TaskListExpander\n  },\n\n  inject: ['root'],\n\n  data() {\n    return {\n      resizer: {\n        moving: false,\n        x: 0\n      }\n    };\n  },\n\n  computed: {\n    /**\n     * Is this row collapsible?\n     *\n     * @returns {bool}\n     */\n    collapsible() {\n      return this.root.state.tasks.filter(task => task.allChildren.length > 0);\n    }\n  },\n\n  methods: {\n    /**\n     * Get style\n     *\n     * @returns {object}\n     */\n    getStyle(column) {\n      return {\n        width: column.finalWidth + 'px'\n      };\n    },\n    /**\n     * Resizer mouse down event handler\n     */\n    resizerMouseDown(event, column) {\n      if (!this.resizer.moving) {\n        this.resizer.moving = column;\n        this.resizer.x = event.clientX;\n        this.resizer.initialWidth = column.width;\n        this.root.$emit('taskList-column-width-change-start', this.resizer.moving);\n      }\n    },\n\n    /**\n     * Resizer mouse move event handler\n     */\n    resizerMouseMove(event) {\n      if (this.resizer.moving) {\n        const lastWidth = this.resizer.moving.width;\n        this.resizer.moving.width = this.resizer.initialWidth + event.clientX - this.resizer.x;\n        if (this.resizer.moving.width < this.root.state.options.taskList.minWidth) {\n          this.resizer.moving.width = this.root.state.options.taskList.minWidth;\n        }\n        if (lastWidth !== this.resizer.moving.width) {\n          this.root.$emit('taskList-column-width-change', this.resizer.moving);\n        }\n      }\n    },\n\n    /**\n     * Resizer mouse up event handler\n     */\n    resizerMouseUp(event) {\n      if (this.resizer.moving) {\n        this.root.$emit('taskList-column-width-change-stop', this.resizer.moving);\n        this.resizer.moving = false;\n      }\n    }\n  },\n\n  /**\n   * Created\n   */\n  created() {\n    this.mouseUpListener = document.addEventListener('mouseup', this.resizerMouseUp.bind(this));\n    this.mouseMoveListener = document.addEventListener('mousemove', this.resizerMouseMove.bind(this));\n    this.root.$on('main-view-mousemove', this.resizerMouseMove);\n    this.root.$on('main-view-mouseup', this.resizerMouseUp);\n  },\n\n  /**\n   * Before destroy event - clear all event listeners\n   */\n  beforeDestroy() {\n    document.removeEventListener('mouseup', this.resizerMouseUp);\n    document.removeEventListener('mousemove', this.resizerMouseMove);\n  }\n};\n</script>\n"],"sourceRoot":"node_modules/gantt-elastic/src/components/TaskList"}]}
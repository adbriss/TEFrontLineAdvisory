{"remainingRequest":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/babel-loader/lib/index.js!/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/quasar/src/components/layout/QLayout.js","dependencies":[{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/quasar/src/components/layout/QLayout.js","mtime":1664650529247},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/cache-loader/dist/cjs.js","mtime":1664650533042},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/babel-loader/lib/index.js","mtime":1664650533420}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.split\";\nimport Vue from 'vue';\nimport QScrollObserver from \"../observer/QScrollObserver.js\";\nimport QResizeObserver from \"../observer/QResizeObserver.js\";\nimport { onSSR } from \"../../plugins/Platform.js\";\nimport { getScrollbarWidth } from \"../../utils/scroll.js\";\nimport slot from \"../../utils/slot.js\";\nexport default Vue.extend({\n  name: 'QLayout',\n  provide: function provide() {\n    return {\n      layout: this\n    };\n  },\n  props: {\n    container: Boolean,\n    view: {\n      type: String,\n      default: 'hhh lpr fff',\n      validator: function validator(v) {\n        return /^(h|l)h(h|r) lpr (f|l)f(f|r)$/.test(v.toLowerCase());\n      }\n    }\n  },\n  data: function data() {\n    return {\n      // page related\n      height: onSSR === true ? 0 : window.innerHeight,\n      width: onSSR === true || this.container === true ? 0 : window.innerWidth,\n      // container only prop\n      containerHeight: 0,\n      scrollbarWidth: onSSR === true ? 0 : getScrollbarWidth(),\n      header: {\n        size: 0,\n        offset: 0,\n        space: false\n      },\n      right: {\n        size: 300,\n        offset: 0,\n        space: false\n      },\n      footer: {\n        size: 0,\n        offset: 0,\n        space: false\n      },\n      left: {\n        size: 300,\n        offset: 0,\n        space: false\n      },\n      scroll: {\n        position: 0,\n        direction: 'down'\n      }\n    };\n  },\n  computed: {\n    rows: function rows() {\n      var rows = this.view.toLowerCase().split(' ');\n      return {\n        top: rows[0].split(''),\n        middle: rows[1].split(''),\n        bottom: rows[2].split('')\n      };\n    },\n    // used by container only\n    targetStyle: function targetStyle() {\n      if (this.scrollbarWidth !== 0) {\n        return _defineProperty({}, this.$q.lang.rtl === true ? 'left' : 'right', \"\".concat(this.scrollbarWidth, \"px\"));\n      }\n    },\n    targetChildStyle: function targetChildStyle() {\n      if (this.scrollbarWidth !== 0) {\n        var _ref2;\n\n        return _ref2 = {}, _defineProperty(_ref2, this.$q.lang.rtl === true ? 'right' : 'left', 0), _defineProperty(_ref2, this.$q.lang.rtl === true ? 'left' : 'right', \"-\".concat(this.scrollbarWidth, \"px\")), _defineProperty(_ref2, \"width\", \"calc(100% + \".concat(this.scrollbarWidth, \"px)\")), _ref2;\n      }\n    }\n  },\n  created: function created() {\n    this.instances = {};\n  },\n  render: function render(h) {\n    var layout = h('div', {\n      staticClass: 'q-layout q-layout--' + (this.container === true ? 'containerized' : 'standard')\n    }, [h(QScrollObserver, {\n      on: {\n        scroll: this.__onPageScroll\n      }\n    }), h(QResizeObserver, {\n      on: {\n        resize: this.__onPageResize\n      }\n    })].concat(slot(this, 'default')));\n    return this.container === true ? h('div', {\n      staticClass: 'q-layout-container overflow-hidden'\n    }, [h(QResizeObserver, {\n      on: {\n        resize: this.__onContainerResize\n      }\n    }), h('div', {\n      staticClass: 'absolute-full',\n      style: this.targetStyle\n    }, [h('div', {\n      staticClass: 'overflow-auto',\n      style: this.targetChildStyle\n    }, [layout])])]) : layout;\n  },\n  methods: {\n    __animate: function __animate() {\n      var _this = this;\n\n      if (this.timer !== void 0) {\n        clearTimeout(this.timer);\n      } else {\n        document.body.classList.add('q-body--layout-animate');\n      }\n\n      this.timer = setTimeout(function () {\n        document.body.classList.remove('q-body--layout-animate');\n        _this.timer = void 0;\n      }, 150);\n    },\n    __onPageScroll: function __onPageScroll(data) {\n      this.scroll = data;\n      this.$listeners.scroll !== void 0 && this.$emit('scroll', data);\n    },\n    __onPageResize: function __onPageResize(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width;\n      var resized = false;\n\n      if (this.height !== height) {\n        resized = true;\n        this.height = height;\n\n        if (this.$listeners['scroll-height'] !== void 0) {\n          this.$emit('scroll-height', height);\n        }\n\n        this.__updateScrollbarWidth();\n      }\n\n      if (this.width !== width) {\n        resized = true;\n        this.width = width;\n      }\n\n      if (resized === true && this.$listeners.resize !== void 0) {\n        this.$emit('resize', {\n          height: height,\n          width: width\n        });\n      }\n    },\n    __onContainerResize: function __onContainerResize(_ref4) {\n      var height = _ref4.height;\n\n      if (this.containerHeight !== height) {\n        this.containerHeight = height;\n\n        this.__updateScrollbarWidth();\n      }\n    },\n    __updateScrollbarWidth: function __updateScrollbarWidth() {\n      if (this.container) {\n        var width = this.height > this.containerHeight ? getScrollbarWidth() : 0;\n\n        if (this.scrollbarWidth !== width) {\n          this.scrollbarWidth = width;\n        }\n      }\n    }\n  }\n});",{"version":3,"sources":["/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/quasar/src/components/layout/QLayout.js"],"names":["Vue","QScrollObserver","QResizeObserver","onSSR","getScrollbarWidth","slot","extend","name","provide","layout","props","container","Boolean","view","type","String","default","validator","v","test","toLowerCase","data","height","window","innerHeight","width","innerWidth","containerHeight","scrollbarWidth","header","size","offset","space","right","footer","left","scroll","position","direction","computed","rows","split","top","middle","bottom","targetStyle","$q","lang","rtl","targetChildStyle","created","instances","render","h","staticClass","on","__onPageScroll","resize","__onPageResize","concat","__onContainerResize","style","methods","__animate","timer","clearTimeout","document","body","classList","add","setTimeout","remove","$listeners","$emit","resized","__updateScrollbarWidth"],"mappings":"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","sourcesContent":["import Vue from 'vue'\n\nimport QScrollObserver from '../observer/QScrollObserver.js'\nimport QResizeObserver from '../observer/QResizeObserver.js'\nimport { onSSR } from '../../plugins/Platform.js'\nimport { getScrollbarWidth } from '../../utils/scroll.js'\nimport slot from '../../utils/slot.js'\n\nexport default Vue.extend({\n  name: 'QLayout',\n\n  provide () {\n    return {\n      layout: this\n    }\n  },\n\n  props: {\n    container: Boolean,\n    view: {\n      type: String,\n      default: 'hhh lpr fff',\n      validator: v => /^(h|l)h(h|r) lpr (f|l)f(f|r)$/.test(v.toLowerCase())\n    }\n  },\n\n  data () {\n    return {\n      // page related\n      height: onSSR === true ? 0 : window.innerHeight,\n      width: onSSR === true || this.container === true ? 0 : window.innerWidth,\n\n      // container only prop\n      containerHeight: 0,\n      scrollbarWidth: onSSR === true ? 0 : getScrollbarWidth(),\n\n      header: {\n        size: 0,\n        offset: 0,\n        space: false\n      },\n      right: {\n        size: 300,\n        offset: 0,\n        space: false\n      },\n      footer: {\n        size: 0,\n        offset: 0,\n        space: false\n      },\n      left: {\n        size: 300,\n        offset: 0,\n        space: false\n      },\n\n      scroll: {\n        position: 0,\n        direction: 'down'\n      }\n    }\n  },\n\n  computed: {\n    rows () {\n      const rows = this.view.toLowerCase().split(' ')\n      return {\n        top: rows[0].split(''),\n        middle: rows[1].split(''),\n        bottom: rows[2].split('')\n      }\n    },\n\n    // used by container only\n    targetStyle () {\n      if (this.scrollbarWidth !== 0) {\n        return { [this.$q.lang.rtl === true ? 'left' : 'right']: `${this.scrollbarWidth}px` }\n      }\n    },\n\n    targetChildStyle () {\n      if (this.scrollbarWidth !== 0) {\n        return {\n          [this.$q.lang.rtl === true ? 'right' : 'left']: 0,\n          [this.$q.lang.rtl === true ? 'left' : 'right']: `-${this.scrollbarWidth}px`,\n          width: `calc(100% + ${this.scrollbarWidth}px)`\n        }\n      }\n    }\n  },\n\n  created () {\n    this.instances = {}\n  },\n\n  render (h) {\n    const layout = h('div', {\n      staticClass: 'q-layout q-layout--' +\n        (this.container === true ? 'containerized' : 'standard')\n    }, [\n      h(QScrollObserver, {\n        on: { scroll: this.__onPageScroll }\n      }),\n      h(QResizeObserver, {\n        on: { resize: this.__onPageResize }\n      })\n    ].concat(\n      slot(this, 'default')\n    ))\n\n    return this.container === true\n      ? h('div', {\n        staticClass: 'q-layout-container overflow-hidden'\n      }, [\n        h(QResizeObserver, {\n          on: { resize: this.__onContainerResize }\n        }),\n        h('div', {\n          staticClass: 'absolute-full',\n          style: this.targetStyle\n        }, [\n          h('div', {\n            staticClass: 'overflow-auto',\n            style: this.targetChildStyle\n          }, [ layout ])\n        ])\n      ])\n      : layout\n  },\n\n  methods: {\n    __animate () {\n      if (this.timer !== void 0) {\n        clearTimeout(this.timer)\n      }\n      else {\n        document.body.classList.add('q-body--layout-animate')\n      }\n      this.timer = setTimeout(() => {\n        document.body.classList.remove('q-body--layout-animate')\n        this.timer = void 0\n      }, 150)\n    },\n\n    __onPageScroll (data) {\n      this.scroll = data\n      this.$listeners.scroll !== void 0 && this.$emit('scroll', data)\n    },\n\n    __onPageResize ({ height, width }) {\n      let resized = false\n\n      if (this.height !== height) {\n        resized = true\n        this.height = height\n        if (this.$listeners['scroll-height'] !== void 0) {\n          this.$emit('scroll-height', height)\n        }\n        this.__updateScrollbarWidth()\n      }\n      if (this.width !== width) {\n        resized = true\n        this.width = width\n      }\n\n      if (resized === true && this.$listeners.resize !== void 0) {\n        this.$emit('resize', { height, width })\n      }\n    },\n\n    __onContainerResize ({ height }) {\n      if (this.containerHeight !== height) {\n        this.containerHeight = height\n        this.__updateScrollbarWidth()\n      }\n    },\n\n    __updateScrollbarWidth () {\n      if (this.container) {\n        const width = this.height > this.containerHeight\n          ? getScrollbarWidth()\n          : 0\n\n        if (this.scrollbarWidth !== width) {\n          this.scrollbarWidth = width\n        }\n      }\n    }\n  }\n})\n"]}]}
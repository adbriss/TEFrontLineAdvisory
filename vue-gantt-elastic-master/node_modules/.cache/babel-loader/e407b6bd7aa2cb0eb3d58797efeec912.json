{"remainingRequest":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/babel-loader/lib/index.js!/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/gantt-elastic/src/components/MainView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/gantt-elastic/src/components/MainView.vue","mtime":1664650536314},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/cache-loader/dist/cjs.js","mtime":1664650533042},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/babel-loader/lib/index.js","mtime":1664650533420},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/cache-loader/dist/cjs.js","mtime":1664650533042},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/vue-loader/lib/index.js","mtime":1664650526464}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TaskList from \"./TaskList/TaskList.vue\";\nimport Chart from \"./Chart/Chart.vue\";\nvar ignoreScrollEvents = false;\nexport default {\n  name: 'MainView',\n  components: {\n    TaskList: TaskList,\n    Chart: Chart\n  },\n  inject: ['root'],\n  data: function data() {\n    return {\n      defs: '',\n      mousePos: {\n        x: 0,\n        y: 0,\n        movementX: 0,\n        movementY: 0,\n        lastX: 0,\n        lastY: 0,\n        positiveX: 0,\n        positiveY: 0,\n        currentX: 0,\n        currentY: 0\n      }\n    };\n  },\n\n  /**\n   * Mounted\n   */\n  mounted: function mounted() {\n    this.viewBoxWidth = this.$el.clientWidth;\n    this.root.state.refs.mainView = this.$refs.mainView;\n    this.root.state.refs.chartContainer = this.$refs.chartContainer;\n    this.root.state.refs.taskList = this.$refs.taskList;\n    this.root.state.refs.chartScrollContainerHorizontal = this.$refs.chartScrollContainerHorizontal;\n    this.root.state.refs.chartScrollContainerVertical = this.$refs.chartScrollContainerVertical;\n    document.addEventListener('mouseup', this.chartMouseUp.bind(this));\n    document.addEventListener('mousemove', this.chartMouseMove.bind(this));\n    document.addEventListener('touchmove', this.chartMouseMove.bind(this));\n    document.addEventListener('touchend', this.chartMouseUp.bind(this));\n  },\n  computed: {\n    /**\n     * Get margin left\n     *\n     * @returns {string}\n     */\n    getMarginLeft: function getMarginLeft() {\n      if (!this.root.state.options.taskList.display) {\n        return '0px';\n      }\n\n      return this.root.state.options.taskList.finalWidth + 'px';\n    },\n\n    /**\n     * Get vertical style\n     *\n     * @returns {object}\n     */\n    verticalStyle: function verticalStyle() {\n      return {\n        width: this.root.state.options.scrollBarHeight + 'px',\n        height: this.root.state.options.rowsHeight + 'px',\n        'margin-top': this.root.state.options.calendar.height + this.root.state.options.calendar.gap + 'px'\n      };\n    },\n\n    /**\n     * Get view box\n     *\n     * @returns {string}\n     */\n    getViewBox: function getViewBox() {\n      if (this.root.state.options.clientWidth) {\n        return \"0 0 \".concat(this.root.state.options.clientWidth - this.root.state.options.scrollBarHeight, \" \").concat(this.root.state.options.height);\n      }\n\n      return \"0 0 0 \".concat(this.root.state.options.height);\n    }\n  },\n  methods: {\n    /**\n     * Emit event when mouse is moving inside main view\n     */\n    mouseMove: function mouseMove(event) {\n      this.root.$emit('main-view-mousemove', event);\n    },\n\n    /**\n     * Emit mouseup event inside main view\n     */\n    mouseUp: function mouseUp(event) {\n      this.root.$emit('main-view-mouseup', event);\n    },\n\n    /**\n     * Horizontal scroll event handler\n     */\n    onHorizontalScroll: function onHorizontalScroll(ev) {\n      this.root.$emit('chart-scroll-horizontal', ev);\n    },\n\n    /**\n     * Vertical scroll event handler\n     */\n    onVerticalScroll: function onVerticalScroll(ev) {\n      this.root.$emit('chart-scroll-vertical', ev);\n    },\n\n    /**\n     * Mouse wheel event handler\n     */\n    chartWheel: function chartWheel(ev) {\n      this.root.$emit('chart-wheel', ev);\n    },\n\n    /**\n     * Chart mousedown event handler\n     * Initiates drag scrolling mode\n     */\n    chartMouseDown: function chartMouseDown(ev) {\n      if (typeof ev.touches !== 'undefined') {\n        this.mousePos.x = this.mousePos.lastX = ev.touches[0].screenX;\n        this.mousePos.y = this.mousePos.lastY = ev.touches[0].screenY;\n        this.mousePos.movementX = 0;\n        this.mousePos.movementY = 0;\n        this.mousePos.currentX = this.$refs.chartScrollContainerHorizontal.scrollLeft;\n        this.mousePos.currentY = this.$refs.chartScrollContainerVertical.scrollTop;\n      }\n\n      this.root.state.options.scroll.scrolling = true;\n    },\n\n    /**\n     * Chart mouseup event handler\n     * Deactivates drag scrolling mode\n     */\n    chartMouseUp: function chartMouseUp(ev) {\n      this.root.state.options.scroll.scrolling = false;\n    },\n\n    /**\n     * Chart mousemove event handler\n     * When in drag scrolling mode this method calculate scroll movement\n     */\n    chartMouseMove: function chartMouseMove(ev) {\n      if (this.root.state.options.scroll.scrolling) {\n        ev.preventDefault();\n        ev.stopImmediatePropagation();\n        ev.stopPropagation();\n        var touch = typeof ev.touches !== 'undefined';\n        var movementX, movementY;\n\n        if (touch) {\n          var screenX = ev.touches[0].screenX;\n          var screenY = ev.touches[0].screenY;\n          movementX = this.mousePos.x - screenX;\n          movementY = this.mousePos.y - screenY;\n          this.mousePos.lastX = screenX;\n          this.mousePos.lastY = screenY;\n        } else {\n          movementX = ev.movementX;\n          movementY = ev.movementY;\n        }\n\n        var horizontal = this.$refs.chartScrollContainerHorizontal;\n        var vertical = this.$refs.chartScrollContainerVertical;\n        var x = 0,\n            y = 0;\n\n        if (touch) {\n          x = this.mousePos.currentX + movementX * this.root.state.options.scroll.dragXMoveMultiplier;\n        } else {\n          x = horizontal.scrollLeft - movementX * this.root.state.options.scroll.dragXMoveMultiplier;\n        }\n\n        horizontal.scrollLeft = x;\n\n        if (touch) {\n          y = this.mousePos.currentY + movementY * this.root.state.options.scroll.dragYMoveMultiplier;\n        } else {\n          y = vertical.scrollTop - movementY * this.root.state.options.scroll.dragYMoveMultiplier;\n        }\n\n        vertical.scrollTop = y;\n      }\n    }\n  },\n\n  /**\n   * Before destroy event - clean up\n   */\n  beforeDestroy: function beforeDestroy() {\n    document.removeEventListener('mouseup', this.chartMouseUp);\n    document.removeEventListener('mousemove', this.chartMouseMove);\n    document.removeEventListener('touchmove', this.chartMouseMove);\n    document.removeEventListener('touchend', this.chartMouseUp);\n  }\n};",{"version":3,"sources":["MainView.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\n/**\n * @fileoverview MainView component\n * @license MIT\n * @author Rafal Pospiech <neuronet.io@gmail.com>\n * @package GanttElastic\n */\n-->\n<template>\n  <div class=\"gantt-elastic__main-view\" :style=\"{ ...root.style['main-view'] }\">\n    <div\n      class=\"gantt-elastic__main-container-wrapper\"\n      :style=\"{ ...root.style['main-container-wrapper'], height: root.state.options.height + 'px' }\"\n    >\n      <div\n        class=\"gantt-elastic__main-container\"\n        :style=\"{\n          ...root.style['main-container'],\n          width: root.state.options.clientWidth + 'px',\n          height: root.state.options.height + 'px'\n        }\"\n        ref=\"mainView\"\n      >\n        <div\n          class=\"gantt-elastic__container\"\n          :style=\"{ ...root.style['container'] }\"\n          @mousemove=\"mouseMove\"\n          @mouseup=\"mouseUp\"\n        >\n          <div\n            ref=\"taskList\"\n            class=\"gantt-elastic__task-list-container\"\n            :style=\"{\n              ...root.style['task-list-container'],\n              width: root.state.options.taskList.finalWidth + 'px',\n              height: root.state.options.height + 'px'\n            }\"\n            v-show=\"root.state.options.taskList.display\"\n          >\n            <task-list></task-list>\n          </div>\n          <div\n            class=\"gantt-elastic__main-view-container\"\n            :style=\"{ ...root.style['main-view-container'] }\"\n            ref=\"chartContainer\"\n            @mousedown=\"chartMouseDown\"\n            @touchstart=\"chartMouseDown\"\n            @mouseup=\"chartMouseUp\"\n            @touchend=\"chartMouseUp\"\n            @mousemove.prevent=\"chartMouseMove\"\n            @touchmove.prevent=\"chartMouseMove\"\n            @wheel.prevent=\"chartWheel\"\n          >\n            <chart></chart>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"gantt-elastic__chart-scroll-container gantt-elastic__chart-scroll-container--vertical\"\n        :style=\"{\n          ...root.style['chart-scroll-container'],\n          ...root.style['chart-scroll-container--vertical'],\n          ...verticalStyle\n        }\"\n        ref=\"chartScrollContainerVertical\"\n        @scroll=\"onVerticalScroll\"\n      >\n        <div\n          class=\"gantt-elastic__chart-scroll--vertical\"\n          :style=\"{ width: '1px', height: root.state.options.allVisibleTasksHeight + 'px' }\"\n        ></div>\n      </div>\n    </div>\n    <div\n      class=\"gantt-elastic__chart-scroll-container gantt-elastic__chart-scroll-container--horizontal\"\n      :style=\"{\n        ...root.style['chart-scroll-container'],\n        ...root.style['chart-scroll-container--horizontal'],\n        marginLeft: getMarginLeft\n      }\"\n      @scroll=\"onHorizontalScroll\"\n      ref=\"chartScrollContainerHorizontal\"\n    >\n      <div\n        class=\"gantt-elastic__chart-scroll--horizontal\"\n        :style=\"{ height: '1px', width: root.state.options.width + 'px' }\"\n      ></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TaskList from './TaskList/TaskList.vue';\nimport Chart from './Chart/Chart.vue';\n\nlet ignoreScrollEvents = false;\n\nexport default {\n  name: 'MainView',\n  components: {\n    TaskList,\n    Chart\n  },\n  inject: ['root'],\n  data() {\n    return {\n      defs: '',\n      mousePos: {\n        x: 0,\n        y: 0,\n        movementX: 0,\n        movementY: 0,\n        lastX: 0,\n        lastY: 0,\n        positiveX: 0,\n        positiveY: 0,\n        currentX: 0,\n        currentY: 0\n      }\n    };\n  },\n  /**\n   * Mounted\n   */\n  mounted() {\n    this.viewBoxWidth = this.$el.clientWidth;\n    this.root.state.refs.mainView = this.$refs.mainView;\n    this.root.state.refs.chartContainer = this.$refs.chartContainer;\n    this.root.state.refs.taskList = this.$refs.taskList;\n    this.root.state.refs.chartScrollContainerHorizontal = this.$refs.chartScrollContainerHorizontal;\n    this.root.state.refs.chartScrollContainerVertical = this.$refs.chartScrollContainerVertical;\n    document.addEventListener('mouseup', this.chartMouseUp.bind(this));\n    document.addEventListener('mousemove', this.chartMouseMove.bind(this));\n    document.addEventListener('touchmove', this.chartMouseMove.bind(this));\n    document.addEventListener('touchend', this.chartMouseUp.bind(this));\n  },\n  computed: {\n    /**\n     * Get margin left\n     *\n     * @returns {string}\n     */\n    getMarginLeft() {\n      if (!this.root.state.options.taskList.display) {\n        return '0px';\n      }\n      return this.root.state.options.taskList.finalWidth + 'px';\n    },\n\n    /**\n     * Get vertical style\n     *\n     * @returns {object}\n     */\n    verticalStyle() {\n      return {\n        width: this.root.state.options.scrollBarHeight + 'px',\n        height: this.root.state.options.rowsHeight + 'px',\n        'margin-top': this.root.state.options.calendar.height + this.root.state.options.calendar.gap + 'px'\n      };\n    },\n\n    /**\n     * Get view box\n     *\n     * @returns {string}\n     */\n    getViewBox() {\n      if (this.root.state.options.clientWidth) {\n        return `0 0 ${this.root.state.options.clientWidth - this.root.state.options.scrollBarHeight} ${\n          this.root.state.options.height\n        }`;\n      }\n      return `0 0 0 ${this.root.state.options.height}`;\n    }\n  },\n  methods: {\n    /**\n     * Emit event when mouse is moving inside main view\n     */\n    mouseMove(event) {\n      this.root.$emit('main-view-mousemove', event);\n    },\n\n    /**\n     * Emit mouseup event inside main view\n     */\n    mouseUp(event) {\n      this.root.$emit('main-view-mouseup', event);\n    },\n\n    /**\n     * Horizontal scroll event handler\n     */\n    onHorizontalScroll(ev) {\n      this.root.$emit('chart-scroll-horizontal', ev);\n    },\n\n    /**\n     * Vertical scroll event handler\n     */\n    onVerticalScroll(ev) {\n      this.root.$emit('chart-scroll-vertical', ev);\n    },\n\n    /**\n     * Mouse wheel event handler\n     */\n    chartWheel(ev) {\n      this.root.$emit('chart-wheel', ev);\n    },\n\n    /**\n     * Chart mousedown event handler\n     * Initiates drag scrolling mode\n     */\n    chartMouseDown(ev) {\n      if (typeof ev.touches !== 'undefined') {\n        this.mousePos.x = this.mousePos.lastX = ev.touches[0].screenX;\n        this.mousePos.y = this.mousePos.lastY = ev.touches[0].screenY;\n        this.mousePos.movementX = 0;\n        this.mousePos.movementY = 0;\n        this.mousePos.currentX = this.$refs.chartScrollContainerHorizontal.scrollLeft;\n        this.mousePos.currentY = this.$refs.chartScrollContainerVertical.scrollTop;\n      }\n      this.root.state.options.scroll.scrolling = true;\n    },\n\n    /**\n     * Chart mouseup event handler\n     * Deactivates drag scrolling mode\n     */\n    chartMouseUp(ev) {\n      this.root.state.options.scroll.scrolling = false;\n    },\n\n    /**\n     * Chart mousemove event handler\n     * When in drag scrolling mode this method calculate scroll movement\n     */\n    chartMouseMove(ev) {\n      if (this.root.state.options.scroll.scrolling) {\n        ev.preventDefault();\n        ev.stopImmediatePropagation();\n        ev.stopPropagation();\n        const touch = typeof ev.touches !== 'undefined';\n        let movementX, movementY;\n        if (touch) {\n          const screenX = ev.touches[0].screenX;\n          const screenY = ev.touches[0].screenY;\n          movementX = this.mousePos.x - screenX;\n          movementY = this.mousePos.y - screenY;\n          this.mousePos.lastX = screenX;\n          this.mousePos.lastY = screenY;\n        } else {\n          movementX = ev.movementX;\n          movementY = ev.movementY;\n        }\n        const horizontal = this.$refs.chartScrollContainerHorizontal;\n        const vertical = this.$refs.chartScrollContainerVertical;\n        let x = 0,\n          y = 0;\n        if (touch) {\n          x = this.mousePos.currentX + movementX * this.root.state.options.scroll.dragXMoveMultiplier;\n        } else {\n          x = horizontal.scrollLeft - movementX * this.root.state.options.scroll.dragXMoveMultiplier;\n        }\n        horizontal.scrollLeft = x;\n        if (touch) {\n          y = this.mousePos.currentY + movementY * this.root.state.options.scroll.dragYMoveMultiplier;\n        } else {\n          y = vertical.scrollTop - movementY * this.root.state.options.scroll.dragYMoveMultiplier;\n        }\n        vertical.scrollTop = y;\n      }\n    }\n  },\n\n  /**\n   * Before destroy event - clean up\n   */\n  beforeDestroy() {\n    document.removeEventListener('mouseup', this.chartMouseUp);\n    document.removeEventListener('mousemove', this.chartMouseMove);\n    document.removeEventListener('touchmove', this.chartMouseMove);\n    document.removeEventListener('touchend', this.chartMouseUp);\n  }\n};\n</script>\n"],"sourceRoot":"node_modules/gantt-elastic/src/components"}]}
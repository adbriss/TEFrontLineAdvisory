{"remainingRequest":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/babel-loader/lib/index.js!/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/gantt-elastic/src/components/Chart/Row/Project.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/gantt-elastic/src/components/Chart/Row/Project.vue","mtime":1664650536313},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/cache-loader/dist/cjs.js","mtime":1664650533042},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/babel-loader/lib/index.js","mtime":1664650533420},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/cache-loader/dist/cjs.js","mtime":1664650533042},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/vue-loader/lib/index.js","mtime":1664650526464}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ChartText from \"../Text.vue\";\nimport ProgressBar from \"../ProgressBar.vue\";\nimport Expander from \"../../Expander.vue\";\nimport taskMixin from \"./Task.mixin.js\";\nexport default {\n  name: 'Project',\n  components: {\n    ChartText: ChartText,\n    ProgressBar: ProgressBar,\n    Expander: Expander\n  },\n  inject: ['root'],\n  props: ['task'],\n  mixins: [taskMixin],\n  data: function data() {\n    return {};\n  },\n  computed: {\n    /**\n     * Get clip path id\n     *\n     * @returns {string}\n     */\n    clipPathId: function clipPathId() {\n      return 'gantt-elastic__project-clip-path-' + this.task.id;\n    },\n\n    /**\n     * Get points\n     *\n     * @returns {string}\n     */\n    getPoints: function getPoints() {\n      var task = this.task;\n      var bottom = task.height - task.height / 4;\n      var corner = task.height / 6;\n      var smallCorner = task.height / 8;\n      return \"M \".concat(smallCorner, \",0\\n                L \").concat(task.width - smallCorner, \" 0\\n                L \").concat(task.width, \" \").concat(smallCorner, \"\\n                L \").concat(task.width, \" \").concat(bottom, \"\\n                L \").concat(task.width - corner, \" \").concat(task.height, \"\\n                L \").concat(task.width - corner * 2, \" \").concat(bottom, \"\\n                L \").concat(corner * 2, \" \").concat(bottom, \"\\n                L \").concat(corner, \" \").concat(task.height, \"\\n                L 0 \").concat(bottom, \"\\n                L 0 \").concat(smallCorner, \"\\n                Z\\n        \");\n    },\n\n    /**\n     * Should we display expander?\n     *\n     * @returns {boolean}\n     */\n    displayExpander: function displayExpander() {\n      var expander = this.root.state.options.chart.expander;\n      return expander.display || expander.displayIfTaskListHidden && !this.root.state.options.taskList.display;\n    }\n  }\n};",{"version":3,"sources":["Project.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA,OAAA,SAAA;AACA,OAAA,WAAA;AACA,OAAA,QAAA;AACA,OAAA,SAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,WAAA,EAAA,WAFA;AAGA,IAAA,QAAA,EAAA;AAHA,GAFA;AAOA,EAAA,MAAA,EAAA,CAAA,MAAA,CAPA;AAQA,EAAA,KAAA,EAAA,CAAA,MAAA,CARA;AASA,EAAA,MAAA,EAAA,CAAA,SAAA,CATA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA,EAAA;AACA,GAZA;AAaA,EAAA,QAAA,EAAA;AACA;;;;;AAKA,IAAA,UANA,wBAMA;AACA,aAAA,sCAAA,KAAA,IAAA,CAAA,EAAA;AACA,KARA;;AAUA;;;;;AAKA,IAAA,SAfA,uBAeA;AACA,UAAA,IAAA,GAAA,KAAA,IAAA;AACA,UAAA,MAAA,GAAA,IAAA,CAAA,MAAA,GAAA,IAAA,CAAA,MAAA,GAAA,CAAA;AACA,UAAA,MAAA,GAAA,IAAA,CAAA,MAAA,GAAA,CAAA;AACA,UAAA,WAAA,GAAA,IAAA,CAAA,MAAA,GAAA,CAAA;AACA,yBAAA,WAAA,mCACA,IAAA,CAAA,KAAA,GAAA,WADA,mCAEA,IAAA,CAAA,KAFA,cAEA,WAFA,iCAGA,IAAA,CAAA,KAHA,cAGA,MAHA,iCAIA,IAAA,CAAA,KAAA,GAAA,MAJA,cAIA,IAAA,CAAA,MAJA,iCAKA,IAAA,CAAA,KAAA,GAAA,MAAA,GAAA,CALA,cAKA,MALA,iCAMA,MAAA,GAAA,CANA,cAMA,MANA,iCAOA,MAPA,cAOA,IAAA,CAAA,MAPA,mCAQA,MARA,mCASA,WATA;AAYA,KAhCA;;AAkCA;;;;;AAKA,IAAA,eAvCA,6BAuCA;AACA,UAAA,QAAA,GAAA,KAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,KAAA,CAAA,QAAA;AACA,aAAA,QAAA,CAAA,OAAA,IAAA,QAAA,CAAA,uBAAA,IAAA,CAAA,KAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,QAAA,CAAA,OAAA;AACA;AA1CA;AAbA,CAAA","sourcesContent":["<!--\n/**\n * @fileoverview Project component\n * @license MIT\n * @author Rafal Pospiech <neuronet.io@gmail.com>\n * @package GanttElastic\n */\n-->\n<template>\n  <g\n    class=\"gantt-elastic__chart-row-bar-wrapper gantt-elastic__chart-row-project-wrapper\"\n    :style=\"{\n      ...root.style['chart-row-bar-wrapper'],\n      ...root.style['chart-row-project-wrapper'],\n      ...task.style['chart-row-bar-wrapper']\n    }\"\n  >\n    <foreignObject\n      class=\"gantt-elastic__chart-expander gantt-elastic__chart-expander--project\"\n      :style=\"{\n        ...root.style['chart-expander'],\n        ...root.style['chart-expander--project'],\n        ...task.style['chart-expander']\n      }\"\n      :x=\"task.x - root.state.options.chart.expander.offset - root.state.options.chart.expander.size\"\n      :y=\"task.y + (root.state.options.row.height - root.state.options.chart.expander.size) / 2\"\n      :width=\"root.state.options.chart.expander.size\"\n      :height=\"root.state.options.chart.expander.size\"\n      v-if=\"displayExpander\"\n    >\n      <expander :tasks=\"[task]\" :options=\"root.state.options.chart.expander\" type=\"chart\"></expander>\n    </foreignObject>\n    <svg\n      class=\"gantt-elastic__chart-row-bar gantt-elastic__chart-row-project\"\n      :style=\"{ ...root.style['chart-row-bar'], ...root.style['chart-row-project'], ...task.style['chart-row-bar'] }\"\n      :x=\"task.x\"\n      :y=\"task.y\"\n      :width=\"task.width\"\n      :height=\"task.height\"\n      :viewBox=\"`0 0 ${task.width} ${task.height}`\"\n      @click=\"emitEvent('click', $event)\"\n      @mouseenter=\"emitEvent('mouseenter', $event)\"\n      @mouseover=\"emitEvent('mouseover', $event)\"\n      @mouseout=\"emitEvent('mouseout', $event)\"\n      @mousemove=\"emitEvent('mousemove', $event)\"\n      @mousedown=\"emitEvent('mousedown', $event)\"\n      @mouseup=\"emitEvent('mouseup', $event)\"\n      @mousewheel=\"emitEvent('mousewheel', $event)\"\n      @touchstart=\"emitEvent('touchstart', $event)\"\n      @touchmove=\"emitEvent('touchmove', $event)\"\n      @touchend=\"emitEvent('touchend', $event)\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <defs>\n        <clipPath :id=\"clipPathId\">\n          <path :d=\"getPoints\"></path>\n        </clipPath>\n      </defs>\n      <path\n        class=\"gantt-elastic__chart-row-bar-polygon gantt-elastic__chart-row-project-polygon\"\n        :style=\"{\n          ...root.style['chart-row-bar-polygon'],\n          ...root.style['chart-row-project-polygon'],\n          ...task.style['base'],\n          ...task.style['chart-row-bar-polygon']\n        }\"\n        :d=\"getPoints\"\n      ></path>\n      <progress-bar :task=\"task\" :clip-path=\"'url(#' + clipPathId + ')'\"></progress-bar>\n    </svg>\n    <chart-text :task=\"task\" v-if=\"root.state.options.chart.text.display\"></chart-text>\n  </g>\n</template>\n\n<script>\nimport ChartText from '../Text.vue';\nimport ProgressBar from '../ProgressBar.vue';\nimport Expander from '../../Expander.vue';\nimport taskMixin from './Task.mixin.js';\nexport default {\n  name: 'Project',\n  components: {\n    ChartText,\n    ProgressBar,\n    Expander\n  },\n  inject: ['root'],\n  props: ['task'],\n  mixins: [taskMixin],\n  data() {\n    return {};\n  },\n  computed: {\n    /**\n     * Get clip path id\n     *\n     * @returns {string}\n     */\n    clipPathId() {\n      return 'gantt-elastic__project-clip-path-' + this.task.id;\n    },\n\n    /**\n     * Get points\n     *\n     * @returns {string}\n     */\n    getPoints() {\n      const task = this.task;\n      const bottom = task.height - task.height / 4;\n      const corner = task.height / 6;\n      const smallCorner = task.height / 8;\n      return `M ${smallCorner},0\n                L ${task.width - smallCorner} 0\n                L ${task.width} ${smallCorner}\n                L ${task.width} ${bottom}\n                L ${task.width - corner} ${task.height}\n                L ${task.width - corner * 2} ${bottom}\n                L ${corner * 2} ${bottom}\n                L ${corner} ${task.height}\n                L 0 ${bottom}\n                L 0 ${smallCorner}\n                Z\n        `;\n    },\n\n    /**\n     * Should we display expander?\n     *\n     * @returns {boolean}\n     */\n    displayExpander() {\n      const expander = this.root.state.options.chart.expander;\n      return expander.display || (expander.displayIfTaskListHidden && !this.root.state.options.taskList.display);\n    }\n  }\n};\n</script>\n"],"sourceRoot":"node_modules/gantt-elastic/src/components/Chart/Row"}]}
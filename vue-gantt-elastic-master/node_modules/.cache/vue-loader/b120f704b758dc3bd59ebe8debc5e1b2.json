{"remainingRequest":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/gantt-elastic-header/src/Header.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/gantt-elastic-header/src/Header.vue","mtime":1664650525743},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/cache-loader/dist/cjs.js","mtime":1664650533042},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/babel-loader/lib/index.js","mtime":1664650533420},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/cache-loader/dist/cjs.js","mtime":1664650533042},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/vue-loader/lib/index.js","mtime":1664650526464}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport vueSlider from \"vue-slider-component\";\nimport \"vue-slider-component/theme/default.css\";\nimport Switches from \"vue-switches\";\n\nconst defaultStyle = {\n  header: {\n    margin: \"0px auto\",\n    background: \"#f3f5f747\",\n    padding: \"10px\",\n    overflow: \"hidden\",\n    clear: \"both\",\n    display: \"flex\",\n    \"justify-content\": \"space-between\"\n  },\n  \"header-title\": { float: \"left\" },\n  \"header-options\": { float: \"right\" },\n  \"header-title--text\": {\n    \"font-size\": \"20px\",\n    \"vertical-align\": \"middle\",\n    \"font-weight\": \"400\",\n    \"line-height\": \"35px\",\n    \"padding-left\": \"22px\",\n    \"letter-spacing\": \"1px\"\n  },\n  \"header-title--html\": {\n    \"font-size\": \"20px\",\n    \"vertical-align\": \"middle\",\n    \"font-weight\": \"400\",\n    \"line-height\": \"35px\",\n    \"padding-left\": \"22px\",\n    \"letter-spacing\": \"1px\"\n  },\n  \"header-btn-recenter\": {\n    background: \"#95A5A6\",\n    border: \"none\",\n    outline: \"none\",\n    cursor: \"pointer\",\n    color: \"white\",\n    \"border-radius\": \"3px\",\n    \"margin-right\": \"27px\",\n    \"font-size\": \"16px\",\n    padding: \"8px 12px\"\n  },\n  \"header-slider\": {\n    \"box-sizing\": \"content-box\"\n  },\n  \"header-slider-wrapper\": {\n    display: \"inline-block\",\n    \"vertical-align\": \"middle\"\n  },\n  \"header-slider--slider\": { \"box-sizing\": \"content-box\" },\n  \"header-slider--process\": { \"box-sizing\": \"content-box\" },\n  \"header-task-list-switch--label\": { \"box-sizing\": \"content-box\" },\n  \"header-task-list-switch\": {\n    margin: \"0px 15px\",\n    \"vertical-align\": \"middle\"\n  },\n  \"header-label\": {}\n};\nconst defaultOptions = {\n  title: {\n    label: \"gantt-elastic\",\n    html: false\n  },\n  locale: {\n    Now: \"Now\",\n    \"X-Scale\": \"Zoom-X\",\n    \"Y-Scale\": \"Zoom-Y\",\n    \"Task list width\": \"Task list\",\n    \"Before/After\": \"Expand\",\n    \"Display task list\": \"Show task list\"\n  }\n};\nexport default {\n  name: \"GanttHeader\",\n  components: {\n    vueSlider,\n    Switches\n  },\n  props: [\"options\", \"dynamicStyle\"],\n  inject: [\"root\"],\n  data() {\n    return {\n      scaleTimeoutId: null,\n      firstScale: false,\n      localScale: 0,\n      localHeight: 0,\n      localBefore: 0,\n      localPercent: 0,\n      sliderOptions: {\n        xScale: {\n          value: 0\n        }\n      },\n      style: {},\n      opts: {}\n    };\n  },\n  created() {\n    this.localScale = this.root.state.options.times.timeZoom;\n    this.localHeight = this.root.state.options.row.height;\n    this.localBefore = this.root.state.options.scope.before;\n    this.localPercent = this.root.state.options.taskList.percent;\n    this.sliderOptions.xScale.value = this.root.state.options.times.timeZoom;\n    this.style = this.root.mergeDeep({}, defaultStyle, this.dynamicStyle);\n    this.opts = this.root.mergeDeep({}, defaultOptions, this.options);\n  },\n  methods: {\n    getImage() {\n      this.root.getImage(\"image/png\").then(imgB64 => {\n        const link = document.createElement(\"a\");\n        link.href = imgB64;\n        link.download = \"gantt-elastic.png\";\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      });\n    },\n    recenterPosition() {\n      this.root.$emit(\"recenterPosition\");\n    },\n    setScale(value) {\n      if (this.scaleTimeoutId !== null) {\n        clearTimeout(this.scaleTimeoutId);\n        this.scaleTimeoutId = null;\n      }\n      // debouncing\n      if (this.firstScale) {\n        this.scaleTimeoutId = setTimeout(() => {\n          this.root.$emit(\"times-timeZoom-change\", value);\n          this.scaleTimeoutId = null;\n        }, 50);\n      } else {\n        this.root.$emit(\"times-timeZoom-change\", value);\n        this.firstScale = true;\n      }\n    }\n  },\n  computed: {\n    /**\n     * If there is a component slot specified for header\n     * @returns {bool}\n     */\n    beforeOptionsIsComponent() {\n      const headerSlot = this.options.slots.header;\n      if (\n        typeof headerSlot.beforeOptions === \"object\" &&\n        !Array.isArray(headerSlot.beforeOptions)\n      ) {\n        return true;\n      }\n      return false;\n    },\n    /**\n     * If there is a slot with beforeOptions html content\n     * @returns {bool}\n     */\n    beforeOptionsIsHtml() {\n      if (typeof this.options.slots.header.beforeOptions === \"string\") {\n        return true;\n      }\n      return false;\n    },\n    scale: {\n      get() {\n        return this.localScale;\n      },\n      set(value) {\n        this.localScale = Number(value);\n        this.setScale(this.localScale);\n      }\n    },\n    height: {\n      get() {\n        return this.localHeight;\n      },\n      set(value) {\n        this.localHeight = Number(value);\n        this.root.$emit(\"row-height-change\", Number(value));\n      }\n    },\n    scope: {\n      get() {\n        return this.localBefore;\n      },\n      set(value) {\n        this.localBefore = Number(value);\n        this.root.$emit(\"scope-change\", Number(value));\n      }\n    },\n    divider: {\n      get() {\n        return this.localPercent;\n      },\n      set(value) {\n        this.localPercent = Number(value);\n        this.root.$emit(\"taskList-width-change\", Number(value));\n      }\n    }\n  }\n};\n",{"version":3,"sources":["Header.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+IA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Header.vue","sourceRoot":"node_modules/gantt-elastic-header/src","sourcesContent":["<!--\n/**\n * @fileoverview Header component\n * @license MIT\n * @author Rafal Pospiech <neuronet.io@gmail.com>\n * @package GanttElasticHeader\n */\n-->\n<template>\n  <div class=\"gantt-elastic__header\" :style=\"{ ...style['header'] }\">\n    <div\n      class=\"gantt-elastic__header-title\"\n      :style=\"{ ...style['header-title'] }\"\n    >\n      <div\n        class=\"gantt-elastic__header-title--text\"\n        :style=\"{ ...style['header-title--text'] }\"\n        v-if=\"!opts.title.html\"\n      >\n        {{ opts.title.label }}\n      </div>\n      <div\n        class=\"gantt-elastic__header-title--html\"\n        :style=\"{ ...style['header-title--html'] }\"\n        v-if=\"opts.title.html\"\n        v-html=\"opts.title.label\"\n      ></div>\n    </div>\n    <div\n      class=\"gantt-elastic__header-options\"\n      :style=\"{ ...style['header-options'] }\"\n    >\n      <button\n        class=\"gantt-elastic__header-btn-recenter\"\n        :style=\"{ ...style['header-btn-recenter'] }\"\n        @click.prevent=\"recenterPosition\"\n      >\n        {{ opts.locale.Now }}\n      </button>\n      <label\n        class=\"gantt-elastic__header-label\"\n        :style=\"{ ...style['header-label'] }\"\n      >\n        {{ opts.locale[\"X-Scale\"] }}\n        <div\n          class=\"gantt-elastic__header-slider-wrapper\"\n          :style=\"{ ...style['header-slider-wrapper'] }\"\n        >\n          <vue-slider\n            class=\"gantt-elastic__header-slider\"\n            tooltip=\"none\"\n            :style=\"{ ...style['header-slider'] }\"\n            :process-style=\"{ ...style['header-slider--process'] }\"\n            :slider-style=\"{ ...style['header-slider--slider'] }\"\n            v-model=\"scale\"\n            :max=\"24\"\n            :min=\"2\"\n            width=\"100px\"\n          ></vue-slider>\n        </div>\n      </label>\n      <label\n        class=\"gantt-elastic__header-label\"\n        :style=\"{ ...style['header-label'] }\"\n      >\n        {{ opts.locale[\"Y-Scale\"] }}\n        <div\n          class=\"gantt-elastic__header-slider-wrapper\"\n          :style=\"{ ...style['header-slider-wrapper'] }\"\n        >\n          <vue-slider\n            class=\"gantt-elastic__header-slider\"\n            tooltip=\"none\"\n            :style=\"{ ...style['header-slider'] }\"\n            :process-style=\"{ ...style['header-slider--process'] }\"\n            :slider-style=\"{ ...style['header-slider--slider'] }\"\n            v-model=\"height\"\n            :max=\"100\"\n            :min=\"7\"\n            width=\"100px\"\n          ></vue-slider>\n        </div>\n      </label>\n      <label\n        class=\"gantt-elastic__header-label\"\n        :style=\"{ ...style['header-label'] }\"\n      >\n        {{ opts.locale[\"Before/After\"] }}\n        <div\n          class=\"gantt-elastic__header-slider-wrapper\"\n          :style=\"{ ...style['header-slider-wrapper'] }\"\n        >\n          <vue-slider\n            class=\"gantt-elastic__header-slider\"\n            tooltip=\"none\"\n            :style=\"{ ...style['header-slider'] }\"\n            :process-style=\"{ ...style['header-slider--process'] }\"\n            :slider-style=\"{ ...style['header-slider--slider'] }\"\n            v-model=\"scope\"\n            :max=\"31\"\n            :min=\"0\"\n            width=\"100px\"\n          ></vue-slider>\n        </div>\n      </label>\n      <label\n        class=\"gantt-elastic__header-label\"\n        :style=\"{ ...style['header-label'] }\"\n      >\n        {{ opts.locale[\"Task list width\"] }}\n        <div\n          class=\"gantt-elastic__header-slider-wrapper\"\n          :style=\"{ ...style['header-slider-wrapper'] }\"\n        >\n          <vue-slider\n            class=\"gantt-elastic__header-slider\"\n            tooltip=\"none\"\n            :style=\"{ ...style['header-slider'] }\"\n            :process-style=\"{ ...style['header-slider--process'] }\"\n            :slider-style=\"{ ...style['header-slider--slider'] }\"\n            v-model=\"divider\"\n            :max=\"100\"\n            :min=\"0\"\n            width=\"100px\"\n          ></vue-slider>\n        </div>\n      </label>\n      <label\n        class=\"gantt-elastic__header-task-list-switch--wrapper\"\n        :style=\"{ ...style['header-task-list-switch--label'] }\"\n      >\n        <switches\n          class=\"gantt-elastic__header-task-list-switch\"\n          :style=\"{ ...style['header-task-list-switch'] }\"\n          v-model=\"root.state.options.taskList.display\"\n        ></switches>\n        {{ opts.locale[\"Display task list\"] }}\n      </label>\n    </div>\n  </div>\n</template>\n\n<script>\nimport vueSlider from \"vue-slider-component\";\nimport \"vue-slider-component/theme/default.css\";\nimport Switches from \"vue-switches\";\n\nconst defaultStyle = {\n  header: {\n    margin: \"0px auto\",\n    background: \"#f3f5f747\",\n    padding: \"10px\",\n    overflow: \"hidden\",\n    clear: \"both\",\n    display: \"flex\",\n    \"justify-content\": \"space-between\"\n  },\n  \"header-title\": { float: \"left\" },\n  \"header-options\": { float: \"right\" },\n  \"header-title--text\": {\n    \"font-size\": \"20px\",\n    \"vertical-align\": \"middle\",\n    \"font-weight\": \"400\",\n    \"line-height\": \"35px\",\n    \"padding-left\": \"22px\",\n    \"letter-spacing\": \"1px\"\n  },\n  \"header-title--html\": {\n    \"font-size\": \"20px\",\n    \"vertical-align\": \"middle\",\n    \"font-weight\": \"400\",\n    \"line-height\": \"35px\",\n    \"padding-left\": \"22px\",\n    \"letter-spacing\": \"1px\"\n  },\n  \"header-btn-recenter\": {\n    background: \"#95A5A6\",\n    border: \"none\",\n    outline: \"none\",\n    cursor: \"pointer\",\n    color: \"white\",\n    \"border-radius\": \"3px\",\n    \"margin-right\": \"27px\",\n    \"font-size\": \"16px\",\n    padding: \"8px 12px\"\n  },\n  \"header-slider\": {\n    \"box-sizing\": \"content-box\"\n  },\n  \"header-slider-wrapper\": {\n    display: \"inline-block\",\n    \"vertical-align\": \"middle\"\n  },\n  \"header-slider--slider\": { \"box-sizing\": \"content-box\" },\n  \"header-slider--process\": { \"box-sizing\": \"content-box\" },\n  \"header-task-list-switch--label\": { \"box-sizing\": \"content-box\" },\n  \"header-task-list-switch\": {\n    margin: \"0px 15px\",\n    \"vertical-align\": \"middle\"\n  },\n  \"header-label\": {}\n};\nconst defaultOptions = {\n  title: {\n    label: \"gantt-elastic\",\n    html: false\n  },\n  locale: {\n    Now: \"Now\",\n    \"X-Scale\": \"Zoom-X\",\n    \"Y-Scale\": \"Zoom-Y\",\n    \"Task list width\": \"Task list\",\n    \"Before/After\": \"Expand\",\n    \"Display task list\": \"Show task list\"\n  }\n};\nexport default {\n  name: \"GanttHeader\",\n  components: {\n    vueSlider,\n    Switches\n  },\n  props: [\"options\", \"dynamicStyle\"],\n  inject: [\"root\"],\n  data() {\n    return {\n      scaleTimeoutId: null,\n      firstScale: false,\n      localScale: 0,\n      localHeight: 0,\n      localBefore: 0,\n      localPercent: 0,\n      sliderOptions: {\n        xScale: {\n          value: 0\n        }\n      },\n      style: {},\n      opts: {}\n    };\n  },\n  created() {\n    this.localScale = this.root.state.options.times.timeZoom;\n    this.localHeight = this.root.state.options.row.height;\n    this.localBefore = this.root.state.options.scope.before;\n    this.localPercent = this.root.state.options.taskList.percent;\n    this.sliderOptions.xScale.value = this.root.state.options.times.timeZoom;\n    this.style = this.root.mergeDeep({}, defaultStyle, this.dynamicStyle);\n    this.opts = this.root.mergeDeep({}, defaultOptions, this.options);\n  },\n  methods: {\n    getImage() {\n      this.root.getImage(\"image/png\").then(imgB64 => {\n        const link = document.createElement(\"a\");\n        link.href = imgB64;\n        link.download = \"gantt-elastic.png\";\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      });\n    },\n    recenterPosition() {\n      this.root.$emit(\"recenterPosition\");\n    },\n    setScale(value) {\n      if (this.scaleTimeoutId !== null) {\n        clearTimeout(this.scaleTimeoutId);\n        this.scaleTimeoutId = null;\n      }\n      // debouncing\n      if (this.firstScale) {\n        this.scaleTimeoutId = setTimeout(() => {\n          this.root.$emit(\"times-timeZoom-change\", value);\n          this.scaleTimeoutId = null;\n        }, 50);\n      } else {\n        this.root.$emit(\"times-timeZoom-change\", value);\n        this.firstScale = true;\n      }\n    }\n  },\n  computed: {\n    /**\n     * If there is a component slot specified for header\n     * @returns {bool}\n     */\n    beforeOptionsIsComponent() {\n      const headerSlot = this.options.slots.header;\n      if (\n        typeof headerSlot.beforeOptions === \"object\" &&\n        !Array.isArray(headerSlot.beforeOptions)\n      ) {\n        return true;\n      }\n      return false;\n    },\n    /**\n     * If there is a slot with beforeOptions html content\n     * @returns {bool}\n     */\n    beforeOptionsIsHtml() {\n      if (typeof this.options.slots.header.beforeOptions === \"string\") {\n        return true;\n      }\n      return false;\n    },\n    scale: {\n      get() {\n        return this.localScale;\n      },\n      set(value) {\n        this.localScale = Number(value);\n        this.setScale(this.localScale);\n      }\n    },\n    height: {\n      get() {\n        return this.localHeight;\n      },\n      set(value) {\n        this.localHeight = Number(value);\n        this.root.$emit(\"row-height-change\", Number(value));\n      }\n    },\n    scope: {\n      get() {\n        return this.localBefore;\n      },\n      set(value) {\n        this.localBefore = Number(value);\n        this.root.$emit(\"scope-change\", Number(value));\n      }\n    },\n    divider: {\n      get() {\n        return this.localPercent;\n      },\n      set(value) {\n        this.localPercent = Number(value);\n        this.root.$emit(\"taskList-width-change\", Number(value));\n      }\n    }\n  }\n};\n</script>\n"]}]}
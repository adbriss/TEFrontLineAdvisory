{"remainingRequest":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/gantt-elastic/src/components/MainView.vue?vue&type=template&id=7b0fffa2&","dependencies":[{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/gantt-elastic/src/components/MainView.vue","mtime":1664650536314},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/cache-loader/dist/cjs.js","mtime":1664650533042},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1664650526465},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/cache-loader/dist/cjs.js","mtime":1664650533042},{"path":"/Users/danieldanio/workspace/daniel-danio-student-code/Capstone/project-schedule-app-final-capstone/vue-gantt-elastic-master/node_modules/vue-loader/lib/index.js","mtime":1664650526464}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      staticClass: \"gantt-elastic__main-view\",\n      style: Object.assign({}, _vm.root.style[\"main-view\"])\n    },\n    [\n      _c(\n        \"div\",\n        {\n          staticClass: \"gantt-elastic__main-container-wrapper\",\n          style: Object.assign({}, _vm.root.style[\"main-container-wrapper\"], {\n            height: _vm.root.state.options.height + \"px\"\n          })\n        },\n        [\n          _c(\n            \"div\",\n            {\n              ref: \"mainView\",\n              staticClass: \"gantt-elastic__main-container\",\n              style: Object.assign({}, _vm.root.style[\"main-container\"], {\n                width: _vm.root.state.options.clientWidth + \"px\",\n                height: _vm.root.state.options.height + \"px\"\n              })\n            },\n            [\n              _c(\n                \"div\",\n                {\n                  staticClass: \"gantt-elastic__container\",\n                  style: Object.assign({}, _vm.root.style[\"container\"]),\n                  on: { mousemove: _vm.mouseMove, mouseup: _vm.mouseUp }\n                },\n                [\n                  _c(\n                    \"div\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.root.state.options.taskList.display,\n                          expression: \"root.state.options.taskList.display\"\n                        }\n                      ],\n                      ref: \"taskList\",\n                      staticClass: \"gantt-elastic__task-list-container\",\n                      style: Object.assign(\n                        {},\n                        _vm.root.style[\"task-list-container\"],\n                        {\n                          width:\n                            _vm.root.state.options.taskList.finalWidth + \"px\",\n                          height: _vm.root.state.options.height + \"px\"\n                        }\n                      )\n                    },\n                    [_c(\"task-list\")],\n                    1\n                  ),\n                  _c(\n                    \"div\",\n                    {\n                      ref: \"chartContainer\",\n                      staticClass: \"gantt-elastic__main-view-container\",\n                      style: Object.assign(\n                        {},\n                        _vm.root.style[\"main-view-container\"]\n                      ),\n                      on: {\n                        mousedown: _vm.chartMouseDown,\n                        touchstart: _vm.chartMouseDown,\n                        mouseup: _vm.chartMouseUp,\n                        touchend: _vm.chartMouseUp,\n                        mousemove: function($event) {\n                          $event.preventDefault()\n                          return _vm.chartMouseMove($event)\n                        },\n                        touchmove: function($event) {\n                          $event.preventDefault()\n                          return _vm.chartMouseMove($event)\n                        },\n                        wheel: function($event) {\n                          $event.preventDefault()\n                          return _vm.chartWheel($event)\n                        }\n                      }\n                    },\n                    [_c(\"chart\")],\n                    1\n                  )\n                ]\n              )\n            ]\n          ),\n          _c(\n            \"div\",\n            {\n              ref: \"chartScrollContainerVertical\",\n              staticClass:\n                \"gantt-elastic__chart-scroll-container gantt-elastic__chart-scroll-container--vertical\",\n              style: Object.assign(\n                {},\n                _vm.root.style[\"chart-scroll-container\"],\n                _vm.root.style[\"chart-scroll-container--vertical\"],\n                _vm.verticalStyle\n              ),\n              on: { scroll: _vm.onVerticalScroll }\n            },\n            [\n              _c(\"div\", {\n                staticClass: \"gantt-elastic__chart-scroll--vertical\",\n                style: {\n                  width: \"1px\",\n                  height: _vm.root.state.options.allVisibleTasksHeight + \"px\"\n                }\n              })\n            ]\n          )\n        ]\n      ),\n      _c(\n        \"div\",\n        {\n          ref: \"chartScrollContainerHorizontal\",\n          staticClass:\n            \"gantt-elastic__chart-scroll-container gantt-elastic__chart-scroll-container--horizontal\",\n          style: Object.assign(\n            {},\n            _vm.root.style[\"chart-scroll-container\"],\n            _vm.root.style[\"chart-scroll-container--horizontal\"],\n            { marginLeft: _vm.getMarginLeft }\n          ),\n          on: { scroll: _vm.onHorizontalScroll }\n        },\n        [\n          _c(\"div\", {\n            staticClass: \"gantt-elastic__chart-scroll--horizontal\",\n            style: { height: \"1px\", width: _vm.root.state.options.width + \"px\" }\n          })\n        ]\n      )\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}